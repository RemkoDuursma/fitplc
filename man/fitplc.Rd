% Generated by roxygen2 (4.0.1.99): do not edit by hand
\name{fitplc}
\alias{fitplc}
\alias{fitplcs}
\alias{plot.plcfit}
\title{Fit PLC curves}
\usage{
fitplc(dfr, varnames = c(PLC = "PLC", WP = "MPa"), weights = NULL,
  model = "Weibull", startvalues = list(Px = 3, S = 20), x = 50,
  Weights = NULL, bootci = TRUE)

\method{plot}{plcfit}(x, xlab = NULL, ylab = NULL, ylim = NULL,
  pch = 19, plotPx = TRUE, plotci = TRUE, plotdata = TRUE,
  add = FALSE, selines = c("parametric", "bootstrap"), linecol = "black",
  what = c("relk", "embol"), ...)

fitplcs(dfr, group, ...)
}
\arguments{
\item{dfr}{A dataframe that contains water potential and plc data.}

\item{varnames}{A vector specifying the names of the PLC and water potential data (WP).}

\item{weights}{A variable used as weights in weighted non-linear regression that must be present in the dataframe (unquoted, see examples).}

\item{model}{At the moment, only 'Weibull' is allowed.}

\item{startvalues}{A list of starting values. If set to NULL, \code{fitplc} will attempt to guess starting values.}

\item{bootci}{If TRUE, also computes the bootstrap confidence interval.}

\item{x}{A fitted curve returned by \code{fitplc}}

\item{plotPx}{Logical (default TRUE), whether to plot a vertical line for the P50.}

\item{plotci}{Logical (default TRUE), whether to plot the confidence interval (if computed with bootci=TRUE).}

\item{plotdata}{Logical (default TRUE), whether to add the data to the plot.}

\item{add}{Logical (default FALSE), whether to add the plot to a current device. This is useful to overlay two plots or curves, for example.}

\item{linecol}{the color of the line}

\item{what}{Either 'relk' or 'embol'; it will plot either relative conductivity or percent embolism.}

\item{group}{Character; variable in the dataframe that specifies groups. The curve will be fit for every group level.}

\item{\dots}{Further parameters passed to \code{fitplc}.}
}
\description{
This function fits 'percent loss conductivity' (PLC) curves. At the moment, it
only fits the Weibull curve, as reparameterized by Ogle et al. (2009), and only returns
P50 (although soon it will return P88 or whatever values).
The function \code{fitplcs} can be used for batch fitting. See examples below for usage of \code{fitplc}
or \code{fitplcs}.
}
\details{
If a variable with the name Weights is present in the dataframe, this variable will be used as the \code{weights} argument in \code{\link{nls}} to perform weighted non-linear regression. See the final example on how to use this.

A plot method is available for the fitted object, see examples on how to use it.
}
\examples{
\dontrun{

# First read a dataframe (in this example, from the folder 'test')
dfr <- read.csv("test/stemvul-ros.csv")

# 1. Fit one species (or fit all, see next example)
dfr_eute <- subset(dfr, Species =="EuTe")

# Make fit. Store results in object 'pfit'
# 'varnames' specifies the names of the 'PLC' variable in the dataframe,
# and water potential (WP).
pfit <- fitplc(dfr_eute, varnames=c(PLC="PLC", WP="MPa"))

# Look at fit
pfit

# Make a standard plot. The default plot is 'relative conductivity',
# (which is 1.0 where PLC = 0).
plot(pfit)

# Or plot the percent embolism
plot(pfit, what="embol")

# Get the coefficients of the fit.
coef(pfit)

# 2. Fit all species in the dataset.
allfit <- fitplcs(dfr, "Species", varnames=c(PLC="PLC", WP="MPa"))

# Make three plots
# windows(10,8) # optional : open up a window and split.
# par(mfrow=c(3,1), mar=c(4,4,2,2))
for(i in 1:3)plot(allfit[[i]], xlim=c(0,7), main=names(allfit)[i])

# Coefficients show the estimates and 95\% CI (given by 'lower' and 'upper')
# Based on the CI's, species differences can be decided.
coef(allfit)

# 3. Specify Weights. The default variable name is Weights, if present in the dataset
# it will be used for weighted non-linear regression
dfr_eute$Weights <- abs(50-dfr_eute$PLC)^1.2
pfit <- fitplc(dfr_eute, varnames=c(PLC="PLC", WP="MPa"), weights=Weights)
coef(pfit)

}
}

